/*
The sequence of triangle numbers is generated by adding the natural numbers.
So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.

The first ten terms would be:
1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

 1: 1
 3: 1,3
 6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28
We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred divisors?
*/

#include <iostream>
#include <vector>
#include <cmath>

int printDevisors(int n);

int st = 0;

int main()
{
  int divisorN = 0;
  int temp = 0;
 
  std::cout << "Insert the number of divisors: ";
  std::cin >> divisorN;
  

  for (int i = 1; i > 0; ++i)
  {
      temp += i;
      std::cout << "The term is is: " << temp << " devisors: ";
	  st = printDevisors(temp);
      
      if (st >= divisorN)
		break;
	  
	  st = 0;
	  	
    }
 

    std::cout << "value: " << temp << std::endl;
  return 0;
}

int printDevisors(int n)
{
	std::vector<int> nVector;
	
	for (int i = 1; i <= sqrt(n); ++i)
	{
		if (n % i == 0)
		{
			if (n / i == i)
			{
				++st;
				printf("%d, ", i);
			}
			else
			{
				++st;
				printf("%d, ", i);
				nVector.push_back(n/i);
			}
		}
	}

	for (int i = nVector.size() - 1; i >= 0; --i)
	{
		++st;
		printf("%d, ", nVector[i]);
	}
	std:: cout << "\n";
	return st;
}
